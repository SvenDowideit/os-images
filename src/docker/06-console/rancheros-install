#!/bin/bash

set -e

usage()
{
cat <<EOF
Usage: 
  rancheros-install [options]
Options:
  -c cloud-config file
      needed for SSH keys.
  -d device
  -f [ DANGEROUS! Data loss can happen ] partition/format without prompting
  -t install-type:
        generic:    (Default) Creates 1 ext4 partition and installs RancherOS
        amazon-ebs: Installs RancherOS and sets up PV-GRUB
  -v os-installer version.
  -h print this
EOF
}

PARTITION_FLAG="false"
INSTALL_CONTAINER_IMAGE="rancher/os"

if [ "$(whoami)" != "root" ]; then
    echo "Please run as root." 1>&2
    exit 1
fi

if [ -x /usr/bin/ros ]; then
    INSTALL_CONTAINER_IMAGE="$(ros config get upgrade.image)"
fi

if [ -n "$(grep RancherOS /etc/lsb-release)" ]; then
    INSTALLER_VERSION=$(grep DISTRIB_RELEASE /etc/lsb-release|cut -d'=' -f2)
fi

EXTRA_ARGS=

while getopts "c:d:ft:v:h" OPTION
do
    case $OPTION in
        c) CLOUD_CONFIG="$OPTARG" ;;
        d) DEVICE="$OPTARG" ;;
        f) FORCE_INSTALL="true" ;;
        t) INSTALL_TYPE="${OPTARG}" ;;
        v) INSTALLER_VERSION="$OPTARG" ;;
        h) usage; exit ;;
        *) exit 1 ;;
    esac
done

if [[ -z "${INSTALL_TYPE}" ]]; then
    echo "No install type specified...defaulting to generic"
    INSTALL_TYPE="generic"
fi

if [ -z "${CLOUD_CONFIG}" ] && [ "${INSTALL_TYPE}" != "amazon-ebs" ]; then
    echo "$0: called without cloud config. Can not proceed without -c" 1>&2
    exit 1
fi

if [[ -z "${DEVICE}" ]]; then 
    echo "$0: No device defined. Can not proceed without -d <dev> specified" 1>&2
    exit 1
fi

if [ "${INSTALL_TYPE}" == "generic" ]; then
    PARTITION_FLAG="true"
fi

if [[ ! -z "${CLOUD_CONFIG}" ]]; then
    cp ${CLOUD_CONFIG} /opt/user_config.yml
    EXTRA_ARGS='-c /opt/user_config.yml'
fi

if [ "${FORCE_INSTALL}" != "true" ] && [ "${INSTALL_TYPE}" != "rancher-upgrade" ]; then
    echo "All data will be wiped from this device"
    printf "Partition: ${PARTITION_FLAG}\nDEVICE: ${DEVICE}\n"
    read -p "Are you sure you want to continue? [yN]" -n 1 -r confirmation
    if [ "$confirmation" != "y" ]; then
        echo "Exiting..."
        exit 1
    fi
fi

if [ "$PARTITION_FLAG" == "true" ]; then
    system-docker run --net=host -it --privileged --entrypoint=/scripts/set-disk-partitions --volumes-from=all-volumes ${INSTALL_CONTAINER_IMAGE}:${INSTALLER_VERSION} ${DEVICE}
    system-docker start udev
fi

system-docker run --volumes-from=user-volumes --net=host -it --privileged ${INSTALL_CONTAINER_IMAGE}:${INSTALLER_VERSION} -d ${DEVICE} -t ${INSTALL_TYPE} ${EXTRA_ARGS}

echo "RancherOS has been installed. Please reboot..."
